async function e(e){const t=await function(e){const t=(new TextEncoder).encode(e);return window.crypto.subtle.digest("SHA-256",t)}(e);return o=t,btoa(String.fromCharCode.apply(null,new Uint8Array(o))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"");var o}function t(){const e=new Uint32Array(28);return window.crypto.getRandomValues(e),Array.from(e,(e=>("0"+e.toString(16)).substr(-2))).join("")}const o=async o=>{if(!o)throw Error("Please provide your Kinde credentials");if(o!==Object(o))throw Error("The Kinde SDK must be initiated with an object");const{redirect_uri:r,domain:n,is_live:a=!0,logout_uri:i=r}=o;if(!r||"string"!=typeof o.redirect_uri)throw Error("Please supply a valid redirect_uri for your users to be redirected after successful authentication");if(!n||"string"!=typeof n)throw Error("Please supply a valid Kinde domain so we can connect to your account");if("boolean"!=typeof a)throw TypeError("Please supply a boolean value for is_live");const c=a?"spa@live":"spa@sandbox",s={client_id:c,redirect_uri:r,authorization_endpoint:`${n}/oauth2/auth`,token_endpoint:`${n}/oauth2/token`,requested_scopes:"openid offline",domain:n},d=async()=>{const e=localStorage.getItem("kinde_token");if(e)try{const t=JSON.parse(e),o=await fetch(s.token_endpoint,{method:"POST",headers:new Headers({"Content-type":"application/x-www-form-urlencoded; charset=UTF-8"}),body:new URLSearchParams({client_id:s.client_id,grant_type:"refresh_token",refresh_token:t.refresh_token})}),r=await o.json();return localStorage.setItem("kinde_token",JSON.stringify(r)),r.access_token}catch(e){console.log(e)}};await d();const l=async o=>{const{state:n,code_challenge:a,url:i}=await(async()=>{const o=t(),r=t(),n=await e(r);return sessionStorage.setItem(`pkce-code-verifier-${o}`,r),{state:o,code_challenge:n,url:new URL(s.authorization_endpoint)}})();i.search=new URLSearchParams({redirect_uri:r,client_id:c,response_type:"code",scope:s.requested_scopes,code_challenge:a,code_challenge_method:"S256",state:n,start_page:o}),window.location=i};return{getToken:d,getUser:async()=>{const e=localStorage.getItem("kinde_token"),t=JSON.parse(e);if(t)try{const e=await fetch(`${n}/oauth2/user_profile`,{headers:new Headers({Authorization:"Bearer "+t.access_token})});return await e.json()}catch(e){console.log(e)}},handleRedirectCallback:async()=>{const e=new URLSearchParams(window.location.search);if(!e.has("code"))return{};const t=e.get("code"),o=e.get("state"),r=e.get("error");r&&console.error(`Error returned from authorization server: ${r}`);const n=sessionStorage.getItem(`pkce-code-verifier-${o}`);if(n)try{const e=await fetch(s.token_endpoint,{method:"POST",headers:new Headers({"Content-type":"application/x-www-form-urlencoded; charset=UTF-8"}),body:new URLSearchParams({client_id:s.client_id,code:t,code_verifier:n,grant_type:"authorization_code",redirect_uri:s.redirect_uri})}),r=await e.json();localStorage.setItem("kinde_token",JSON.stringify(r));return new URL(window.location).search="",sessionStorage.removeItem(`pkce-code-verifier-${o}`),{kindeState:r}}catch(e){console.log(e),sessionStorage.removeItem(`pkce-code-verifier-${o}`)}else console.error("Invalid state")},login:async()=>{await l("login")},logout:async()=>{const e=new URL(`${s.domain}/logout`);try{localStorage.removeItem("kinde_token"),e.search=new URLSearchParams({redirect:i}),window.location=e}catch(e){console.log(e)}},register:async()=>{await l("registration")}}};export{o as default};
